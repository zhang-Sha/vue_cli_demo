{"remainingRequest":"/webWork/myCode/my_code/0409vuex_2/demo/node_modules/babel-loader/lib/index.js?{\"presets\":[\"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/@vue/babel-preset-app/index.js\"]}!/webWork/myCode/my_code/0409vuex_2/demo/node_modules/vue-loader/lib/selector.js?type=script&index=0!/webWork/myCode/my_code/0409vuex_2/demo/src/components/type.vue","dependencies":[{"path":"/webWork/myCode/my_code/0409vuex_2/demo/src/components/type.vue","mtime":1523263194000},{"path":"/webWork/myCode/my_code/0409vuex_2/demo/.babelrc","mtime":1523239980000},{"path":"/webWork/myCode/my_code/0409vuex_2/demo/node_modules/cache-loader/dist/cjs.js","mtime":1523362924000},{"path":"/webWork/myCode/my_code/0409vuex_2/demo/node_modules/babel-loader/lib/index.js","mtime":1519636542000},{"path":"/webWork/myCode/my_code/0409vuex_2/demo/node_modules/vue-loader/lib/selector.js","mtime":1520395332000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      allData: {}\n    };\n  },\n  methods: {\n    addNum: function addNum(item) {\n      item.num++;\n    },\n    reduceNum: function reduceNum(item) {\n      item.num--;\n    },\n    //因为组件创建完成和监听到路由更改后都需要发送ajax获取数据，这里将该方法提取出来，还有一个问题是，如果已经获取到的数据，再次获取时不想重新发送ajax，那么我们就可以将获取的数据缓存\n    getData: function getData() {\n      var _this = this;\n\n      var id = this.$route.params.id;\n\n      if (this.allData[id]) {\n        this.list = this.allData[id];\n      } else {\n        this.$http.get('data/' + id + '.json').then(function (_ref) {\n          var data = _ref.data;\n          _this.list = data;\n          _this.allData[id] = data;\n        });\n      }\n    }\n  },\n  created: function created() {\n    this.getData();\n  },\n  //watch属性可以监听数据的改变，key是监听的数据字段，value是一个函数\n  watch: {\n    $route: function $route() {\n      //监听到路由改变后，重新发送ajax获取数据\n      this.getData();\n    }\n  }\n};",{"version":3,"sources":["type.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;;;YAGA;eACA,AACA;AAHA;;;kCAKA;WACA;AACA;wCACA;WACA;AACA;AACA;;AACA;;kCACA;;4BACA;iCACA;aACA;aACA,yBACA;AACA;uBACA;8BACA;AACA;AACA;AACA,AACA;AArBA;8BAsBA;SACA;AACA;AACA;;8BAEA;AACA;WACA;AACA,AACA;AALA;AA/BA","file":"type.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <ul class=\"type\">\r\n    \t<li v-for=\"item in list\">\r\n    \t\t<img :src=\"'img/item/'+item.img\" />\r\n    \t\t<div class=\"content\">\r\n    \t\t\t<h3>{{item.title}}</h3>\r\n    \t\t\t<p class=\"sales\">已售{{item.sales}}份</p>\r\n    \t\t\t<p>\r\n    \t\t\t\t<span class=\"price\">￥{{item.price}}</span>\r\n    \t\t\t\t<span class=\"add\" @click=\"addNum(item);$store.commit('addPrice',item.price)\">+</span>\r\n    \t\t\t\t<span class=\"num\" v-show=\"item.num>0\">{{item.num}}</span>\r\n    \t\t\t\t<span class=\"reduce\" v-show=\"item.num>0\" @click=\"reduceNum(item);$store.commit('reducePrice',item.price)\">-</span>\r\n    \t\t\t</p>\r\n    \t\t</div>\r\n    \t</li>\r\n    </ul>\r\n</template>\r\n<style type=\"text/css\" lang=\"less\">\r\n.type {\r\n\tli {\r\n\t\tborder-bottom:1px solid #ccc;\r\n\t\tpadding:10px;\r\n\t\timg {\r\n\t\t\twidth:70px;\r\n\t\t\tfloat:left;\r\n\t\t}\r\n\t\t.content {\r\n\t\t\tmargin-left:80px;\r\n\t\t\th3 {\r\n\t\t\t\tfont-size:14px;\r\n\t\t\t\tfont-weight:normal;\r\n\t\t\t}\r\n\t\t\t.sales {\r\n\t\t\t\tcolor:#666;\r\n\t\t\t\tfont-size:12px;\r\n\t\t\t}\r\n\t\t\tp {\r\n\t\t\t\tspan {\r\n                    font-size:12px;\r\n\t\t\t\t}\r\n\t\t\t\t.add,\r\n\t\t\t\t.num,\r\n\t\t\t\t.reduce {\r\n\t\t\t\t\tfloat:right;\r\n\t\t\t\t\tcolor:red;\r\n\t\t\t\t}\r\n\t\t\t\t.add,.reduce {\r\n\t\t\t\t\tdisplay:inline-block;\r\n\t\t\t\t\twidth:20px;\r\n\t\t\t\t\theight:20px;\r\n\t\t\t\t\tborder:1px solid #ccc;\r\n\t\t\t\t\tborder-radius:50%;\r\n\t\t\t\t\ttext-align:center;\r\n\t\t\t\t\tline-height:17px;\r\n\t\t\t\t\tfont-size:20px;\r\n\r\n\t\t\t\t}\r\n\t\t\t\t.num {\r\n\t\t\t\t\tcolor:#333;\r\n\t\t\t\t\tpadding:0 10px;\r\n\t\t\t\t\tfont-size:16px;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\t\r\n</style>\r\n<script type=\"text/javascript\">\r\n\texport default {\r\n\t\tdata:() => ({\r\n\t\t\tlist:[],\r\n\t\t\tallData:{}\r\n\t\t}),\r\n\t\tmethods:{\r\n\t\t\taddNum(item) {\r\n\t\t\t\titem.num++\r\n\t\t\t},\r\n\t\t\treduceNum(item) {\r\n\t\t\t\titem.num--\r\n\t\t\t},\r\n\t\t\t//因为组件创建完成和监听到路由更改后都需要发送ajax获取数据，这里将该方法提取出来，还有一个问题是，如果已经获取到的数据，再次获取时不想重新发送ajax，那么我们就可以将获取的数据缓存\r\n\t\t\tgetData() {\r\n\t\t\t\tlet id = this.$route.params.id;\r\n\t\t\t\tif(this.allData[id]) {\r\n\t\t\t\t\tthis.list = this.allData[id]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$http\r\n\t\t\t\t\t\t.get('data/'+id+'.json')\r\n\t\t\t\t\t\t.then(({data})=>{\r\n\t\t\t\t\t\t\tthis.list = data;\r\n\t\t\t\t\t\t\tthis.allData[id] = data;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\tthis.getData();\r\n\t\t},\r\n\t\t//watch属性可以监听数据的改变，key是监听的数据字段，value是一个函数\r\n\t\twatch:{\r\n\t\t\t$route() {\r\n\t\t\t\t//监听到路由改变后，重新发送ajax获取数据\r\n\t\t\t\tthis.getData();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>"]}]}